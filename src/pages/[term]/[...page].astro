---
import Layout from '../../layouts/Layout.astro';
import PostCard from '../../components/cards/PostCard.astro';
import Pagination from '../../components/ui/Pagination.astro';
import { getOpenGraph } from '../../utils/gqlYoastSeo.ts';
import { getPostsByCategory, getPostsByTag } from '../../utils/gqlPosts';
import { getAllTerms, getNodeByURI } from '../../utils/gqlRoutes';

// fallback image for if post has no featured image
const openGraphData = await getOpenGraph();
const defaultImage = openGraphData.openGraph.defaultImage.sourceUrl;

export async function getStaticPaths({ paginate }) {
  const allTerms = await getAllTerms();

  let paths = [];

  for (const term of allTerms) {
    const { slug, uri } = term;

    const nodeData = await getNodeByURI(uri);

    let posts;
    switch (nodeData.__typename) {
        case 'Category':
        posts = await getPostsByCategory(slug);
        break;
      case 'Tag':
        posts = await getPostsByTag(slug);
        break;
      default:
        posts = await getPostsByTag(slug);
    }

    const paginatedPosts = paginate(posts, {
      params: { term: uri },
      pageSize: 9
    });

    paginatedPosts.forEach(path => {
      path.props = { ...path.props, node: nodeData.nodeByUri };
    });

    paths = paths.concat(paginatedPosts);
  }
  return paths;
}

const { page, node } = Astro.props;
const params = Astro.params;
---

<Layout title={node.seo?.title || node.title} metaDesc={node.seo?.metaDesc}>

  <section class="not-prose flex flex-col py-8">
    <header class="flex flex-col mb-8 border-b-2 border-gray-200 dark:border-gray-700">
      <h2 class="text-3xl mb-2 font-semibold text-gray-700 dark:text-gray-200">{node.__typename}: {node.name}</h2>
      <p class="mb-2">Now showing {page.start + 1} to {page.end + 1} of all posts tagged with {node.name} out of {page.total} posts.</p>
    </header>

    <ul class="grid gap-8 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">

      {page.data.map(({ title, excerpt, uri, dateGmt, featuredImage }) => (
        <PostCard
          featuredImage={featuredImage?.node.sourceUrl || defaultImage}
          altText={featuredImage?.node.altText || ''}
          title={title}
          dateGmt={dateGmt}
          excerpt={excerpt.replace(/<(.|\n)*?>/g, '')}
          href={`${Astro.site}${uri}`.replace(/([^:]\/)\/+/g, "$1")}
        />
      ))}
    </ul>

    <Pagination
      page={page}
    />

  </section>

</Layout>
