---
import Layout from '../layouts/Layout.astro';
import CategoryTemplate from '../templates/CategoryTemplate.astro';
import PageTemplate from '../templates/PageTemplate.astro';
import PostTemplate from '../templates/PostTemplate.astro';
import TagTemplate from '../templates/TagTemplate.astro';
import { getAllUris, getNodeByURI } from '../utils/gqlRoutes.ts';
import type { NodeByUri } from '../types.ts';

const uri = `/${Astro.params.uri}/`;
const data = await getNodeByURI(uri);
const node: NodeByUri = data.nodeByUri;

function resolvePostTypeTemplate(node: NodeByUri) {
  let postTypeTemplate;
  switch (node.__typename) {
    case 'Page':
      postTypeTemplate = PageTemplate;
      break;
    case 'Post':
      postTypeTemplate = PostTemplate;
      break;
    case 'Category':
      postTypeTemplate = CategoryTemplate;
      break;
    case 'Tag':
      postTypeTemplate = TagTemplate;
      break;
    default:
      postTypeTemplate = PageTemplate;
  }
  return postTypeTemplate;
};

const Template = resolvePostTypeTemplate(node);

export async function getStaticPaths() {
  return await getAllUris();
};
---

<Layout title={node.seo?.title || node.title} metaDesc={node.seo?.metaDesc}>
  <Template node={node} />
</Layout>
